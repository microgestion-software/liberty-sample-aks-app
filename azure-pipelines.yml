trigger:
  branches:
    include:
    - master
    exclude:
    - develop/*
    - feature/*

variables:
  azureSubscription: 'MGDevTransitionWASToLiberty'
  resourceGroup: 'MGDevTransitionWASToLiberty'
  aksCluster: 'MGDevTransitionWASToLiberty'
  containerRegistry: 'MicroGestionAzureContainerRegistry'
  imageName: 'liberty-sample-aks-app'

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        goals: 'package'

    - task: Docker@2
      inputs:
        containerRegistry: '$(containerRegistry)'
        repository: '$(imageName)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(Build.BuildId)-SNAPSHOT
- stage: Deploy
  dependsOn: Build
  jobs:
  - job: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: qetza.replacetokens.replacetokens-task.replacetokens@6
      inputs:
        targetFiles: '$(Build.SourcesDirectory)/deployment/aks-deployment.yaml'
        encoding: 'auto'
        tokenPattern: 'default'
        writeBOM: true
        actionOnMissing: 'warn'
        keepToken: false
        actionOnNoFiles: 'continue'
        enableTransforms: false
        useLegacyPattern: false
        enableTelemetry: true
    - task: Kubernetes@1
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscriptionEndpoint: '$(azureSubscription)'
        azureResourceGroup: '$(resourceGroup)'
        kubernetesCluster: '$(aksCluster)'
        namespace: 'default'
        command: 'apply'
        useConfigurationFile: true
        configuration: '$(Build.SourcesDirectory)/deployment/aks-deployment.yaml'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'
        dockerRegistryEndpoint: '$(containerRegistry)'
